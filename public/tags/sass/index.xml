<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts from Sass on Laura Kalbag</title>
    <link>https://laurakalbag.com/tags/sass/</link>
    <description>Recent posts from Laura Kalbag</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Fri, 02 May 2014 13:10:30 +0000</lastBuildDate>
    
        <atom:link href="https://laurakalbag.com/tags/sass/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A little realign</title>
      <link>https://laurakalbag.com/a-little-realign/</link>
      <pubDate>Fri, 02 May 2014 13:10:30 +0000</pubDate>
      
      <guid>https://laurakalbag.com/a-little-realign/</guid>
      <description>

&lt;p&gt;Things are looking a bit different around here. It’s not a redesign so much as a &lt;a href=&#34;http://alistapart.com/article/redesignrealign&#34;&gt;realign&lt;/a&gt;. I’ve been tinkering for a few months, and finally got to the point where I’m happy to push it live (even though there’s more I could do.)&lt;/p&gt;

&lt;p&gt;There were a few particular goals for this redesign:&lt;/p&gt;

&lt;h2 id=&#34;rewrite-the-css&#34;&gt;Rewrite the CSS&lt;/h2&gt;

&lt;p&gt;I lived in fear that someone might look closely at my CSS. My last redesign came about when responsive web design was still young, and I was incredibly foolish. I linked to three different stylesheets in my header, one for 320px and up, one for 768px and up, and one for 1024px and up. There were some “minor” breakpoints in these stylesheets, but yes, I was using fairly device-based breakpoints, and that was three HTTP requests in the head. Certainly not ideal.&lt;/p&gt;

&lt;p&gt;The previous version was also a peculiar Sass/plain CSS hybrid as I’d started learning Sass a few months into the redesign. As Sass is so easy to integrate into ordinary CSS, it wasn’t too problematic, but I knew I could lessen repetition and make the structure of my CSS much easier to maintain if I moved it all into a consistent format.&lt;/p&gt;

&lt;p&gt;Now I’ve rewritten all the CSS from scratch using Sass, and added in a few new techniques, such as flexbox, for some of the form elements. If you’re interested in how badly I write Sass, I’ve uploaded those files (in the spirit of Dan Eden’s max CSS) into a /sass folder and you can find the file references in the main file, &lt;a href=&#34;https://laurakalbag.com/wp-content/themes/laurakalbag-2014/sass/style.scss&#34;&gt;style.scss&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;reboot-the-typography&#34;&gt;Reboot the typography&lt;/h2&gt;

&lt;p&gt;I love Avenir, I really do, but I was increasingly aware that it can be hard work to read as body text. After falling in love with &lt;a href=&#34;http://hvdfonts.com/#189-Brandon%20Text&#34; title=&#34;Brandon Text typeface&#34;&gt;Brandon Text&lt;/a&gt;, I decided it was a nice evolution from Avenir, keeping the geometric shapes but in a softer, more legible, way.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2014/05/previous-typography.jpg&#34;&gt;
&lt;figure class=&#34;wp-caption aligncenter size-full wp-image-4455&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2014/05/previous-typography.jpg&#34; alt=&#34;Avenir as display and body text&#34;/&gt;
	
	
	&lt;figcaption&gt;
		&lt;p&gt;
		Avenir as display and body text on the old version of my site
		
			
		
		&lt;/p&gt; 
	&lt;/figcaption&gt;
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I recently read Tim Brown’s fantastic &lt;a href=&#34;http://nicewebtype.com/notes/2013/04/23/pocket-guide-to-combining-typefaces/&#34;&gt;Combining Typefaces&lt;/a&gt; book and felt encouraged to be braver with my typefaces choices. I didn’t want to just keep using different weights of the same family as I had before. After some &lt;a href=&#34;https://dribbble.com/shots/1510342-Freight-Micro-and-Brandon-Text-dilemma?list=users&amp;amp;amp;offset=6&#34; title=&#34;Dribbble shots showing the process of my heading typeface choice&#34;&gt;deliberation&lt;/a&gt; and advice, I settled on &lt;a href=&#34;http://www.rosettatype.com/Arek&#34;&gt;Arek&lt;/a&gt; for headings, to add a bit of quirky personality to my site. This is the first time I’ve used &lt;a href=&#34;http://fontdeck.com&#34;&gt;Fontdeck&lt;/a&gt; properly, and I’m really pleased with the quality of the font and the speedy rendering.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2014/05/new-typography.jpg&#34;&gt;
&lt;figure class=&#34;wp-caption aligncenter size-full wp-image-4456&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2014/05/new-typography.jpg&#34; alt=&#34;Arek for the display text, and Brandon Text for the body text&#34;/&gt;
	
	
	&lt;figcaption&gt;
		&lt;p&gt;
		Arek for the display, and Brandon Text for the body on the new realign
		
			
		
		&lt;/p&gt; 
	&lt;/figcaption&gt;
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m both self-hosting and using external JavaScript to pull in fonts for my site. Brandon Text is self-hosted whereas Arek is hosted on Fontdeck. I can’t quite make up my mind whether I prefer to suffer slow loading times on my self-hosted fonts, or the risk of my site depending on another site for the fonts to load with a font delivery service.&lt;/p&gt;

&lt;h2 id=&#34;simplify&#34;&gt;Simplify&lt;/h2&gt;

&lt;p&gt;The illustrations had to go. I’m always trying to tame my temptation to over-decorate, and while the illustrations in the previous version were a nice responsive bonus for large screens, a cleaner design is less distracting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2014/05/previous-homepage.jpg&#34;&gt;
&lt;figure class=&#34;wp-caption aligncenter size-large wp-image-4460&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2014/05/previous-homepage-991x1024.jpg&#34; alt=&#34;Previous homepage layout, with portfolio images, blog posts and a messy illustration&#34;/&gt;
	
	
	&lt;figcaption&gt;
		&lt;p&gt;
		Previous homepage layout, with portfolio images, blog posts and a messy illustration
		
			
		
		&lt;/p&gt; 
	&lt;/figcaption&gt;
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For a long time, my homepage was my most hated page. And the most visited. It just felt like everything had been thrown on, it was unstructured and untidy. Given that the second most popular area of my site is the Past Projects, I decided to include twelve (nicely divisible for smaller screen sizes) images from my past projects and a brief introduction.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2014/05/new-homepage.jpg&#34;&gt;
&lt;figure class=&#34;wp-caption aligncenter size-large wp-image-4458&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2014/05/new-homepage-1024x743.jpg&#34; alt=&#34;New version of the homepage, with just an introduction and larger portfolio images&#34;/&gt;
	
	
	&lt;figcaption&gt;
		&lt;p&gt;
		New version of the homepage, with just an introduction and larger portfolio images
		
			
		
		&lt;/p&gt; 
	&lt;/figcaption&gt;
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WordPress, by default, gives you so many options for meta information on archive pages. I previously listed the amount of comments, categories and tags on each post on the blog archive. On the projects archive I listed the dates and type of project. I realised these were unnecessary chunks of information that were easy enough to find on the single post or project pages. Just because I &lt;em&gt;could&lt;/em&gt; add everything to each template, it didn’t mean I should. Less repetitive content means the pages are now cleaner, easier to read, and nowhere near as long as before.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2014/05/previous-blog.jpg&#34;&gt;
&lt;figure class=&#34;wp-caption aligncenter size-large wp-image-4459&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2014/05/previous-blog-1024x541.jpg&#34; alt=&#34;Previous blog, showing comments, categories and tags for each post&#34;/&gt;
	
	
	&lt;figcaption&gt;
		&lt;p&gt;
		Previous blog, with lots of information about each post
		
			
		
		&lt;/p&gt; 
	&lt;/figcaption&gt;
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2014/05/new-blog.jpg&#34;&gt;
&lt;figure class=&#34;wp-caption aligncenter size-large wp-image-4457&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2014/05/new-blog-1024x541.jpg&#34; alt=&#34;New blog post layout without comments, tags or category information&#34;/&gt;
	
	
	&lt;figcaption&gt;
		&lt;p&gt;
		New blog post layout with no unnecessary meta information
		
			
		
		&lt;/p&gt; 
	&lt;/figcaption&gt;
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;new-projects-with-dribbble-shots&#34;&gt;New projects with Dribbble shots&lt;/h2&gt;

&lt;p&gt;I’ve been terrible at keeping my portfolio up to date in the last year. I’ve still got five projects that are halfway to being documented, but I’ve added four recent projects with some more in-depth explanations of the process. I want to keep adding more useful explanations to each project, making it more of a case study, so they’ll inevitably take a little longer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2014/05/Screen-Shot-2014-05-02-at-13.07.28.png&#34;&gt;
&lt;figure class=&#34;wp-caption aligncenter size-large wp-image-4454&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2014/05/Screen-Shot-2014-05-02-at-13.07.28-1024x256.png&#34; alt=&#34;thumbnails of four new case studies&#34;/&gt;
	
	
	&lt;figcaption&gt;
		&lt;p&gt;
		four new case studies: Indie Phone, Freelancing map illustration, Rachel Andrew’s site and the Turbine logo
		
			
		
		&lt;/p&gt; 
	&lt;/figcaption&gt;
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After hearing &lt;a href=&#34;http://unfinished.bz/37&#34;&gt;Andy Clarke chat with Dan Cederholm on Unfinished Business&lt;/a&gt; a few months ago, I shamelessly borrowed Andy’s great idea to include Dribbble shots from a project in my portfolio. I found a handy plugin to grab my Dribbble shots as they’re posted and add them into WordPress, so I can now easily connect my Dribbble shots to the relevant post and include a little gallery at the end of each project case study.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2014/05/Screen-Shot-2014-05-02-at-12.58.24.png&#34;&gt;
&lt;figure class=&#34;wp-caption aligncenter size-full wp-image-4453&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2014/05/Screen-Shot-2014-05-02-at-12.58.24.png&#34; alt=&#34;four Dribbble shots showing the rocket logo design process&#34;/&gt;
	
	
	&lt;figcaption&gt;
		&lt;p&gt;
		progress shots from the Indie Phone project
		
			
		
		&lt;/p&gt; 
	&lt;/figcaption&gt;
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;there-s-probably-more-to-do&#34;&gt;There’s probably more to do…&lt;/h2&gt;

&lt;p&gt;As ever, there’s always more testing to be done. I don’t expect this site to be perfect, but I thought it was about time I hurried up and pushed it live. If you spot anything wonky, please let me know in the comments, &lt;a href=&#34;http://twitter.com/laurakalbag&#34;&gt;on Twitter&lt;/a&gt; or &lt;a href=&#34;https://laurakalbag.com/contact-me/&#34; title=&#34;Contact Me&#34;&gt;send me an email&lt;/a&gt;. I’ll be very grateful!&lt;/p&gt;

&lt;h2 id=&#34;2-comments&#34;&gt;2 comments&lt;/h2&gt;

&lt;ol class=&#34;commentlist&#34;&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-17622&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/2cedd48cbe620346d6628ab04c5cc192?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/2cedd48cbe620346d6628ab04c5cc192?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://leegargano.com&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Lee Gargano&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-17622&#34;&gt;&lt;time datetime=&#34;2014-05-02T13:50:57+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;13:50pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Great decisions, Laura! I agree with you wholeheartedly on the font selections and home page redesign. I need to reanalyze my own site soon now that I have enough data to make those decisions. That’s the beauty of launching a product (your site) and then adjusting it as you go along based on the results you find.
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment odd alt thread-odd thread-alt depth-1&#34; id=&#34;li-comment-17629&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/c24bc4315ae99321925696e8092fdc1e?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/c24bc4315ae99321925696e8092fdc1e?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://mattsoria.com&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Matt Soria&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-17629&#34;&gt;&lt;time datetime=&#34;2014-05-02T14:37:38+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;14:37pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        &lt;p&gt;Hey Laura!

I have frequently visited your site in the past year for reference and inspiration. Even before the new “realign” I appreciated your bold choice of color and great copy (especially the “about” page).

I just so happened to be making a few adjustments to my own site late last night and turned to your site again for inspiration when I noticed the changes on your homepage, and I must say — brilliant little improvements. The fonts look great, and the new layout on the homepage is indeed simpler and quite inviting I think.

It reminds me also that as designers, and as people that grown and change, our websites don’t have to be something that we re-design every year-or-so — they can be continuously changed and adapted as we grow and learn, and our design tastes change as well.

It makes me think of [Frank Lloyd Wright’s Home and Studio](https://www.google.cl/search?q=inside+frank+lloyd+wright%27s+home+and+studio&amp;amp;client=firefox-a&amp;amp;hs=PHG&amp;amp;rls=org.mozilla:en-US:official&amp;amp;channel=sb&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;sa=X&amp;amp;ei=SK1jU5SPDPO0sASJkoHoBw&amp;amp;ved=0CAgQ_AUoAQ&amp;amp;biw=1360&amp;amp;bih=631&#34; rel=&#34;nofollow) in Hyde Park, Illinois (US). When you walk through it much of it seems like a hodgepodge of different styles and periods, and it was because it was his home, and he was constantly experimenting on it with new ideas that he would then take out into the wild and use on his paid projects. Shouldn’t our own websites be that too? Besides a portfolio or résumé or whatever, what better place for experimentation and growth? If you got feedback today that was overwhelming negative about the changes you made (doubt you will), well you’d just change them again. No big deal, right? What a great way to learn?!

Anyway, cheers to the realign, and keep killing it!&lt;/p&gt; &lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Sass for designers — the talk and the case study</title>
      <link>https://laurakalbag.com/sass-for-designers-the-talk-and-the-case-study/</link>
      <pubDate>Fri, 26 Jul 2013 09:00:10 +0000</pubDate>
      
      <guid>https://laurakalbag.com/sass-for-designers-the-talk-and-the-case-study/</guid>
      <description>

&lt;p&gt;Yesterday I gave a talk at the &lt;a href=&#34;http://environmentsforhumans.com/2013/css-summit/&#34;&gt;fantastic online conference CSS Summit&lt;/a&gt; on ‘Sass for designers’. It uses &lt;a href=&#34;http://webtalkdogwalk.in/brighton/&#34;&gt;my new site Web Talk Dog Walk&lt;/a&gt; as a case study, and explains the basics of Sass and how to get started using &lt;a href=&#34;http://incident57.com/codekit/&#34;&gt;CodeKit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Usually I wouldn’t recommend checking out my slides, as they’re useless without me explaining them, but as this was an online conference and I wanted the slides to be extra clear in case of technical problems, they hopefully read in a fairly easy-to-follow way:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/conferences/#post-3873&#34;&gt;See the Sass for designers slides on my Conferences page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ve also made &lt;a href=&#34;https://github.com/laurakalbag/webtalkdogwalk&#34;&gt;most of the site code (the stuff not covered by other people’s licenses!) available on GitHub&lt;/a&gt;. I’ve tried to make the commits fit in with the slides as much as possible.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;Edits: the very kind &lt;a href=&#34;https://twitter.com/roy/status/360670152855011328&#34;&gt;Roy Tomeij&lt;/a&gt; wrote a post about &lt;a href=&#34;http://roytomeij.com/2013/should-you-use-a-sass-mixin-or-extend.html&#34;&gt;when to use mixins vs @extend in Sass&lt;/a&gt; following my talk. I didn’t know much about @extend, but now I do! So &lt;a href=&#34;http://roytomeij.com/2013/should-you-use-a-sass-mixin-or-extend.html&#34;&gt;this is some additional recommended reading&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Andy Spicer also asked if I could share my &lt;a href=&#34;http://www.bohemiancoding.com/sketch/&#34;&gt;Sketch&lt;/a&gt; mockups for the site design. &lt;a href=&#34;https://www.dropbox.com/s/13tfiy8xzworplz/Web%20talk%20dog%20walk%20mockup.zip&#34;&gt;You can download the zipped .sketch file here&lt;/a&gt;. I use &lt;a href=&#34;http://www.bohemiancoding.com/sketch/beta/&#34;&gt;the latest version of the Sketch beta&lt;/a&gt;, so you’ll need to use this to open the file as it may not be compatible with older versions.&lt;/p&gt;

&lt;h2 id=&#34;one-comment&#34;&gt;One comment&lt;/h2&gt;

&lt;ol class=&#34;commentlist&#34;&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-566&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/32f64168571caa3020b81676974a70f0?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/32f64168571caa3020b81676974a70f0?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://digitalevangelist.net&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Steven Grant&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-566&#34;&gt;&lt;time datetime=&#34;2013-07-26T10:52:30+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;10:52am&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        A good wee article Laura. Always interested in seeing other workflows. The more I read about Sass, the more powerful it gets. 

Until recently I didn’t know about placeholder selectors. Also, with RWD projects I’ve moved my breakpoint calls into a mixin and passing the breakpoint by a variable.

So many great tools out there at the moment :-)
    &lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Web talk dog walk, the site</title>
      <link>https://laurakalbag.com/web-talk-dog-walk-the-site/</link>
      <pubDate>Thu, 25 Jul 2013 17:56:04 +0000</pubDate>
      
      <guid>https://laurakalbag.com/web-talk-dog-walk-the-site/</guid>
      <description>

&lt;p&gt;I’ve finally made &lt;a href=&#34;http://webtalkdogwalk.in/brighton/&#34;&gt;a site for the web talk dog walks&lt;/a&gt;! It may be a small site, and is probably very broken in places, but it was a fun mini project and worked well as a case study for my &lt;a href=&#34;http://environmentsforhumans.com/2013/css-summit/&#34;&gt;Sass for designers talk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It also makes use of &lt;a href=&#34;http://grabaperch.com/&#34;&gt;Perch, that wonderful little content management system&lt;/a&gt;. I really would recommend it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://webtalkdogwalk.in/brighton/&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-3893&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2013/07/Screen-Shot-2013-07-25-at-17.51.08.png&#34; alt=&#34;Web talk dog walk&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;one-comment&#34;&gt;One comment&lt;/h2&gt;

&lt;ol class=&#34;commentlist&#34;&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-10237&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/8dd12b0ef4ca8ad1df8cd048dac59c8f?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/8dd12b0ef4ca8ad1df8cd048dac59c8f?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://www.ofleashk9training.com&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Richelle Cortis&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-10237&#34;&gt;&lt;time datetime=&#34;2014-02-16T16:10:23+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;16:10pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Nice design Laura, and a great ideea to write about your walks in nature, along with the dog and friends. I have a small terrier that I take with me wherever I go. My dear Sheba!
    &lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Sass For Designers at CSS Summit 2013</title>
      <link>https://laurakalbag.com/css-summit-2013/</link>
      <pubDate>Thu, 09 May 2013 09:13:01 +0000</pubDate>
      
      <guid>https://laurakalbag.com/css-summit-2013/</guid>
      <description>

&lt;p&gt;I’m speaking at &lt;a href=&#34;http://environmentsforhumans.com/2013/css-summit/&#34;&gt;CSS Summit 2013&lt;/a&gt; about Sass For Designers. CSS Summit is a great online conference, meaning you can attend from anywhere in the world (hooray!)&lt;/p&gt;

&lt;p&gt;There’s a huge amount of expert speakers across three days, with a day each dedicated to CSS3 Training, Advanced CSS and Preprocessors. I’m on the third day, covering the basics of Sass with ‘Sass for Designers’. The other talks on that day will cover Sass in more depth, with case studies and more advanced techniques, so I’m hoping to provide a useful introduction for those of us who are less familiar with programming.&lt;/p&gt;

&lt;h2 id=&#34;20-off&#34;&gt;20% off!&lt;/h2&gt;

&lt;p&gt;If this sounds like your kind of conference, then you’ll want this discount code. Use &lt;strong&gt;20LAURA&lt;/strong&gt; to &lt;a href=&#34;http://environmentsforhumans.com/2013/css-summit#buytickets&#34;&gt;get 20% off individual or meeting room tickets&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://environmentsforhumans.com/2013/css-summit/&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-3273&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2013/05/css-summit.png&#34; alt=&#34;CSS Summit 2013. The 5th Annual 2-day online, live CSS conference. Environments for Humans brings together some of the Web&amp;#39;s most notable experts in CSS and SASS for an all-new, three-day online conference, the CSS Summit 2013! Bring the experts to your desktop July 23-July 25, 2013 from 9AM to 4PM (CT)&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;2-comments&#34;&gt;2 comments&lt;/h2&gt;

&lt;ol class=&#34;commentlist&#34;&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-542&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/c5bd15f36ca445f33618e7aa6ffe5019?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/c5bd15f36ca445f33618e7aa6ffe5019?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;James&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-542&#34;&gt;&lt;time datetime=&#34;2013-05-12T16:07:47+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;16:07pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Hey Laura

Big fan of you in the industry. Small thing i just noticed on your comment form on your website (this one!). You don’t have an asterix on the Comment field, even though this is a required field. Annoying as this is the wordpress default, they should fix this also.
    &lt;/div&gt;
    &lt;ul class=&#34;children&#34;&gt;
        &lt;li class=&#34;comment odd alt depth-2&#34; id=&#34;li-comment-543&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/c82da2b0cc67398de24f4822007b7b35?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/c82da2b0cc67398de24f4822007b7b35?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://big-andy.co.uk&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Andrew&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-543&#34;&gt;&lt;time datetime=&#34;2013-05-21T12:09:54+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;12:09pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        What’s the point of using a comment form if you don’t leave a comment? Hmmm?
        &lt;/div&gt;
    &lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Sass for Designers — The Setup</title>
      <link>https://laurakalbag.com/sass-for-designers-the-setup/</link>
      <pubDate>Fri, 28 Dec 2012 17:51:36 +0000</pubDate>
      
      <guid>https://laurakalbag.com/sass-for-designers-the-setup/</guid>
      <description>

&lt;p&gt;As an accompaniment to my post on &lt;a href=&#34;https://laurakalbag.com/sass-for-designers/&#34; title=&#34;Sass for Designers&#34;&gt;Sass for Designers&lt;/a&gt; (why and how you should use Sass) I thought I’d better include a quick writeup on my setup for working with Sass in the hope that it’ll help you get started. I’m afraid I work on a OS X, so my instructions will only be good for Macs.&lt;/p&gt;

&lt;p&gt;Of course, all of this can be done with the command line and other terrifying tools. I’m very impressed by those who can remember all the commands and quickly get everything working silently in the background. I don’t find this very easy, and prefer to use apps to help me out.&lt;/p&gt;

&lt;h2 id=&#34;codekit&#34;&gt;Codekit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://incident57.com/codekit/&#34;&gt;Codekit&lt;/a&gt; does all the processing for you. It takes your Sass and spits it out into fully-working CSS. It does loads of other clever things too, but I mostly just use it for Sass. &lt;a href=&#34;http://incident57.com/codekit/&#34;&gt;Go download it&lt;/a&gt; and give it a go. I think you’ll find it’s definitely worth paying for.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://incident57.com/codekit/&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-1417&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/codekit.png&#34; alt=&#34;screenshot of the Codekit website&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to get started with Codekit and Sass, you’ll need a /sass folder in your project where you keep all your Sass files. Sass files can contain plain old CSS or Sass-style CSS but they must have the extension .scss.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2012/12/sass-folder.png&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-1425&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/sass-folder.png&#34; alt=&#34;screenshot showing .scss file in the /sass folder&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next you open Codekit and add your project folder in the Files section.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2012/12/codekit-new1.png&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-1433&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/codekit-new1.png&#34; alt=&#34;screenshot of adding a new project to the Files pane in Codekit&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After you’ve added your project folder, Codekit will automatically find the Sass file inside your project.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2012/12/project-in-codekit.png&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-1437&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/project-in-codekit.png&#34; alt=&#34;screenshot of a project in Codekit&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you then go into your .scss file and add some Sass, as soon as you save that file, Codekit will compile it into CSS for you.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2012/12/new-sass.png&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-1441&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/new-sass.png&#34; alt=&#34;screenshot of basic Sass being written into a .scss file&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you go to the Log tab in Codekit, you can see that your Sass was successfully compiled into CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2012/12/codekit-log1.png&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-1449&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/codekit-log1.png&#34; alt=&#34;screenshot of the Log in Codekit showing a file successfully compiled&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you then go back to look in your project folder, you can see where Codekit has compiled your CSS into a /css folder containing a .css file. It’s this file that you will reference in your HTML, not the .scss file.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2012/12/css-folder.png&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-1453&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/css-folder.png&#34; alt=&#34;screenshot showing the /css folder created by Codekit&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Codekit is very smart. If you write invalid Sass, it will give you an error. This can be really helpful if you’re new to writing Sass. For example, here I’ve used a &lt;code&gt;#&lt;/code&gt; hash symbol instead of a &lt;code&gt;$&lt;/code&gt; dollar sign when creating a variable.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2012/12/bad-sass.png&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-1457&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/bad-sass.png&#34; alt=&#34;screenshot of invalid Sass using # instead of $&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As with all validators, it’s not always easy to understand what the validation error message means (!) but it can be helpful to be pointed towards the line where the error occurs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://laurakalbag.com/images/2012/12/codekit-error.png&#34;&gt;
&lt;figure class=&#34;aligncenter size-full wp-image-1461&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/codekit-error.png&#34; alt=&#34;screenshot of Codekit showing an error in the Sass&#34;/&gt;
	
	
&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;and-you-re-done&#34;&gt;And you’re done&lt;/h2&gt;

&lt;p&gt;Those are the very basics you need when getting started with Sass. If anyone has any further suggestions for Sass tools, particularly on other OSes, please let me know!&lt;/p&gt;

&lt;h2 id=&#34;one-comment&#34;&gt;One comment&lt;/h2&gt;

&lt;ol class=&#34;commentlist&#34;&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-426&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/30237178832faefa2a7e79998d46648d?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/30237178832faefa2a7e79998d46648d?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;Dave Rutter&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-426&#34;&gt;&lt;time datetime=&#34;2013-01-07T22:33:09+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;22:33pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Hi Laura

You may have seen this already since writing this post but Hammer app looks very interesting ([http://hammerformac.com/](http://hammerformac.com/&#34; rel=&#34;nofollow)). OSX only again I’m afraid. The in development mixture.io may also be of interest, especially for multi-device testing.

I’ve just come across your site and really enjoyed digging around. Keep up the good work.
    &lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Sass for Designers</title>
      <link>https://laurakalbag.com/sass-for-designers/</link>
      <pubDate>Fri, 28 Dec 2012 17:51:04 +0000</pubDate>
      
      <guid>https://laurakalbag.com/sass-for-designers/</guid>
      <description>

&lt;p&gt;Despite saying that I wanted to avoid writing post about development, I wanted to write something about &lt;a href=&#34;http://sass-lang.com/&#34;&gt;Sass&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;excuse-me-what-is-sass&#34;&gt;Excuse me, what is Sass?&lt;/h3&gt;

&lt;p&gt;Sass is a CSS pre-processing language; it’s a slightly different way of writing CSS which can then be processed by a tool that spits out fully-working CSS. It’s like a kind of &lt;a href=&#34;http://en.wikipedia.org/wiki/Short_Hand&#34;&gt;short-hand&lt;/a&gt; that adds in some handy features that aren’t available in CSS. If you want to know how to use Sass in your workflow, try &lt;a href=&#34;https://laurakalbag.com/sass-for-designers-the-setup/&#34; title=&#34;Sass for Designers — The Setup&#34;&gt;my post on Sass for Designers — The Setup&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;why-am-i-writing-this&#34;&gt;Why am I writing this?&lt;/h3&gt;

&lt;p&gt;Sass still isn’t particularly easy for designers to pick up straight away. The &lt;a href=&#34;http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html&#34;&gt;documentation isn’t easy to understand&lt;/a&gt;, The way it’s written is really aimed at those more familiar with programming. &lt;a href=&#34;http://sass-lang.com/tutorial.html&#34;&gt;The tutorial&lt;/a&gt; isn’t too bad, but it doesn’t tell you about the advantages from a designer’s point of view.&lt;/p&gt;

&lt;p&gt;I want to just cover a few simple principles. I’m no Sass expert, I use mostly it in its simplest form, but I’ve found it incredibly useful.&lt;/p&gt;

&lt;p&gt;So what are these advantages? It’s all about efficiency. It makes your markup quicker to write, less repetitive and easier to maintain. That might sound a bit performance-related, but I promise that it’s something that designers (we who use markup to support our design work, rather than being super-programmers) can use to make development much more straight-forward.&lt;/p&gt;

&lt;h2 id=&#34;variables&#34;&gt;Variables&lt;/h2&gt;

&lt;p&gt;The best and most basic example is variables. We tend to use the same colours throughout the document. This result in us writing the same hex code or RGB value over and over again. If we want to change that colour, we need to do a &lt;a href=&#34;http://en.wikipedia.org/wiki/Find_and_replace&#34;&gt;Find-and-Replace&lt;/a&gt; to pick through all of our markup, making sure we don’t accidentally change the wrong value. You might have a few rules that each need your dark red brand colour:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a {
  color: #822733;
}

.summary {
  color: #822733;
}

.copyright {
  color: #822733;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using variables, we can give that particular red hex colour a variable name of &lt;code&gt;$brand-colour&lt;/code&gt; at the beginning of our stylesheet, and then just use that variable throughout the stylesheet where we’d usually use the hex colour. Then, if you suddenly decide that the shade of red isn’t quite right, you just need to change where you declared &lt;code&gt;$brand-colour: #822733;&lt;/code&gt; at the top, and it will be changed for every rule that uses the variable throughout the whole stylesheet.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// My Sass colour library

$brand-colour: #822733;

a {
  color: $brand-colour;
}

.summary {
  color: $brand-colour;
}

.copyright {
  color: $brand-colour;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;numbers-as-variables&#34;&gt;Numbers as variables&lt;/h3&gt;

&lt;p&gt;Variables don’t just have to be strings of text, they can also be numbers which you can manipulate. If you use some kind of baseline grid idea, modular scale, or just a pattern of numbers to keep your design proportional, chances are you’re frequently repeating the same values throughout your stylesheet. If you were using 10px measurements all over the place, you might create ‘unit variable’ with &lt;code&gt;$unit = 10;&lt;/code&gt;. This unit could then be repeated:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$unit = 10px;

h1, h2, h3 {
  margin-bottom: $unit;
}

p {
  margin-bottom: $unit;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But how about when you want that unit to be doubled? You want &lt;em&gt;exactly&lt;/em&gt; twice the margin on another element, because then it will still keep the rhythm in your design. With Sass, you can add simple maths (+, -, *, /, %) to do this very simply:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$unit = 10px;

h1, h2, h3 {
  margin-bottom: $unit;
}

p {
  margin-bottom: $unit;
}

aside {
  margin-bottom: $unit*2; /* 20px */
}

footer {
  margin-top: $unit*4; /* 40px */
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then if you decide, one day, that multiples of 10px aren’t big enough for your design (need MOAR WHITESPACE) then you can just change your &lt;code&gt;$unit&lt;/code&gt; variable to something bigger, such as &lt;code&gt;$unit = 15;&lt;/code&gt; and all of your measurements will be changed accordingly, preserving those proportions throughout your stylesheet.&lt;/p&gt;

&lt;h2 id=&#34;mixins&#34;&gt;Mixins&lt;/h2&gt;

&lt;p&gt;Mixins are reusable collections of rules. These are perfect for design patterns that you might use throughout the site. These also stop you repeating yourself in your CSS but in a way that’s more &lt;a href=&#34;http://en.wikipedia.org/wiki/Semantic_HTML&#34;&gt;semantic&lt;/a&gt; than using the same class name on every HTML element.&lt;/p&gt;

&lt;p&gt;For example, you might have particular divider style that you use all over your site. You use it below all sorts of elements; &lt;code&gt;&amp;amp;lt;article&amp;amp;gt;&lt;/code&gt;s, &lt;code&gt;&amp;amp;lt;header&amp;amp;gt;&lt;/code&gt;s and even the odd &lt;code&gt;&amp;amp;lt;p&amp;amp;gt;&lt;/code&gt;. It’s got a certain amount of padding between the border line and the content above, and a certain margin below. It’s just a grey border but it has a fancy shadow on it.&lt;/p&gt;


&lt;figure class=&#34;attachment_1353 wp-caption aligncenter size-full wp-image-1353&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/12/divider.jpg&#34; alt=&#34;a grey border line with a subtle grey box-shadow&#34;/&gt;
	
	
	&lt;figcaption&gt;
		&lt;p&gt;
		an example of what your divider with a subtle border might look like
		
			
		
		&lt;/p&gt; 
	&lt;/figcaption&gt;
	
&lt;/figure&gt;


&lt;p&gt;Then you might apply the following CSS class of &lt;code&gt;.shadow-border&lt;/code&gt; to any HTML element you want to have the divider. It’s not very semantic, but it does the job:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.shadow-border {
  border-bottom: 1px solid #a4a4a4; 
  
  -webkit-box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);
  box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);

  padding-bottom: 20px;
  margin-bottom: 40px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you wanted to be more semantic, you might go applying all those rules to all the relevant HTML elements, but this can make for an awkwardly-organised stylesheet.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;header, article, p.intro {
  border-bottom: 1px solid #a4a4a4;
  -webkit-box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);
  box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);

  padding-bottom: 20px;
  margin-bottom: 40px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With mixins, you can give this collection a name using &lt;code&gt;@mixin&lt;/code&gt;. This name doesn’t have to relate in any way to your HTML:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@mixin shadow-border {
  border-bottom: 1px solid #a4a4a4; 
  
  -webkit-box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);
  box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);

  padding-bottom: 20px;
  margin-bottom: 40px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, to apply that mixin to any element, you just include its name &lt;code&gt;@include shadow-border;&lt;/code&gt; like you would any other rule in CSS.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@mixin shadow-border {
  border-bottom: 1px solid #a4a4a4; 
  
  -webkit-box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);
  box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);

  padding-bottom: 20px;
  margin-bottom: 40px;
}

article {
  @include shadow-border;
}

header {
  @include shadow-border;
}

p.intro {
  @include shadow-border;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Doesn’t that look neat and tidy?!&lt;/p&gt;

&lt;h3 id=&#34;nesting-mixins&#34;&gt;Nesting mixins&lt;/h3&gt;

&lt;p&gt;Even better, you can nest your mixins inside other mixins. We might want to apply that same type of shadow to lots of elements, so that our design appears to have a consistent light source throughout the site. So we then make a mixin especially for that shadow too. This has the added bonus of keeping all the prefixed CSS (&lt;code&gt;-webkit, -moz, -o, -ms&lt;/code&gt; etc.) tucked away in one place too.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// A few variables thrown in for good measure
$border-colour: #a4a4a4;
$unit: 10px;

@mixin subtle-shadow {
  -webkit-box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);
  box-shadow: 0px 2px 5px 0px rgba(200, 200, 200, 0.6);
}

@mixin shadow-border {
  @include subtle-shadow;
  border-bottom: $unit/10 solid $border-colour; /* Base unit divided by 10 = 1px */

  padding-bottom: $unit*2; /* Base unit multipled by 2 = 20px */ 
  margin-bottom: $unit*4; /* Base unit multipled by 4 = 40px */
}

article {
  @include shadow-border;
}

header {
  @include shadow-border;
}

p.intro {
  @include shadow-border;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;nesting&#34;&gt;Nesting&lt;/h2&gt;

&lt;p&gt;Mixins aren’t the only thing you can nest in Sass. You could nest tags within each other if you wanted, which makes your CSS less repetitive and easier to read as you can see which selectors are related:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/* written in plain old CSS */

.module h3 {
  font-weight: bold;
}

.module p {
  padding-bottom: 10px;
}

/* written in Sass */

.module {
  
  h3 {
    font-weight: bold;
  }

  p {
    padding-bottom: 10px;
  }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But let’s face it, that’s getting really nit-picky about the neatness of your CSS.&lt;/p&gt;

&lt;h3 id=&#34;nesting-media&#34;&gt;Nesting @media&lt;/h3&gt;

&lt;p&gt;Where nesting becomes incredibly useful is with media queries.&lt;/p&gt;

&lt;p&gt;If you follow &lt;a href=&#34;https://laurakalbag.com/smacss-scalable-and-modular-architecture-for-css/&#34; title=&#34;SMACSS – Scalable and Modular Architecture for CSS&#34;&gt;SMACSS&lt;/a&gt; or any other school of thinking where you’re trying to base your media queries around the optimum display of your content, rather than the viewport width of various popular devices, then chances are your stylesheets are filled with different media queries trying to keep your site looking tidy at every possible width.&lt;/p&gt;

&lt;p&gt;Nesting media queries can help with this. Where previous you may have felt like you needed to keep all your media queries in separate files (one for 320px and up, one for 768px and up and so on…) Group all selectors using the same media query width together or list all your media queries relevant to a selector one after the other. Sass allows you to nest your media queries within the selector so you can easily spot where those breaking points are and where they need to be changed.&lt;/p&gt;

&lt;p&gt;For example, I have an article which has a changing &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;line-height&lt;/code&gt; and &lt;code&gt;font-size&lt;/code&gt; depending on the width of the viewport. I want the text of my article to be as legible as possible across all devices. In CSS, this might look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/* initial rule for all viewports, including browsers that don&#39;t support @media */
article {
  font-size: 14px;
  line-height: 25px;
}

article h2 {
  font-size: 18px;
  padding-bottom: 15px;
}

/* for 300px viewports and wider (mobile first) */
@media only screen and (min-width: 300px) {
  article {
    line-height: 20px;
    width: 90%;
  }

  article h2 {
    padding-bottom: 10px; 
  }
}

/* for 600px viewports and wider */
@media only screen and (min-width: 600px) {
  article {
    line-height: 25px;
    width: 80%;
  }

  article h2 {
    padding-bottom: 15px; 
  }
}

/* for 900px viewports and wider */
@media only screen and (min-width: 900px) {
  article {
    width: 60%;
  }
}

/* for 1200px viewports and wider */
@media only screen and (min-width: 1200px) {
  article {
    font-size: 16px;
    line-height: 30px;
    width: 50%;
  }

  article h2 {
    font-size: 21px;
    line-height: 35px;
    padding-bottom: 20px; 
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When you can include the media query &lt;em&gt;within&lt;/em&gt; the selector, it suddenly becomes a lot easier to find those rules that you’re so likely to tweak in the future.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;article {
  font-size: 14px;
  line-height: 25px;

  h2 {
    font-size: 18px;
    padding-bottom: 15px;
  }
  
  @media only screen and (min-width: 300px) {
    line-height: 20px;
    width: 90%;
  
    h2 {
      padding-bottom: 10px; 
    }
  }

  @media only screen and (min-width: 600px) {
    line-height: 25px;
    width: 80%;

    h2 {
      padding-bottom: 15px; 
    }
  }

  @media only screen and (min-width: 900px) {
    width: 60%;
  }

  @media only screen and (min-width: 1200px) {
    font-size: 16px;
    line-height: 30px;
    width: 50%;

    h2 {
      font-size: 21px;
      line-height: 35px;
      padding-bottom: 20px; 
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;give-it-a-go&#34;&gt;Give it a go?&lt;/h2&gt;

&lt;p&gt;There are so many clever, time-saving, efficient things you can do with Sass, and I certainly don’t know them all. The benefit of writing Sass is that you can just write everything in plain old CSS, and just use Sass on the few selectors that could really benefit from it. That’s how I got started, and on every new project I work on, I learn another handy tip and make my CSS that much quicker to write.&lt;/p&gt;

&lt;p&gt;If you’ve got any tips, please let me know in the comments as I find it really hard to discover what might be useful when you’re writing markup with a designer’s perspective!&lt;/p&gt;

&lt;h2 id=&#34;9-comments&#34;&gt;9 comments&lt;/h2&gt;

&lt;ol class=&#34;commentlist&#34;&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-408&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/221a26d0593f7c89c378fc32ae401397?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/221a26d0593f7c89c378fc32ae401397?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://forrest-tanaka.com&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Forrest Tanaka&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-408&#34;&gt;&lt;time datetime=&#34;2012-12-28T22:38:47+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;22:38pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Nested media queries just about brought me to tears… Hey, you have `$unit = 10;` That should be `$unit: 10`? I couldn’t find anything in Sass nor SCSS that looks quite like that.
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment odd alt thread-odd thread-alt depth-1&#34; id=&#34;li-comment-409&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/476f698fd710deaab3b0c3c8b0623c21?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/476f698fd710deaab3b0c3c8b0623c21?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;John Harrington&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-409&#34;&gt;&lt;time datetime=&#34;2012-12-28T22:45:14+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;22:45pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        &lt;p&gt;Nice article, but I don’t like that use of mixins very much, that style is just being duplicated everywhere and I really think you’d be better with a class for it, to reduce the bloat in CSS.

Mixins are best used when you need to calculate things, for instance I use this little mixin to quickly set font sizes and line heights:

```

=fontsize($size)

	font-size: $size + em

	@if ($size &amp;gt;= 2)

		line-height: 1.5em

		@media screen and (min-width: 30em)

			line-height: 3em

	@else

		line-height: 1.5em

```

(also, I use the Sass syntax, rather than SCSS, because I love the whitespace)
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-410&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/476f698fd710deaab3b0c3c8b0623c21?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/476f698fd710deaab3b0c3c8b0623c21?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;John Harrington&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-410&#34;&gt;&lt;time datetime=&#34;2012-12-28T23:33:51+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;23:33pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        For mixins you would actually be better off doing the example where the CSS was badly organised because Sass won’t recognise that the same styles are being applied on each, so your CSS will end up bloated.
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment odd alt thread-odd thread-alt depth-1&#34; id=&#34;li-comment-411&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/830ba17ff6c951f84f7b97084133b163?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/830ba17ff6c951f84f7b97084133b163?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://yatil.net&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Eric Eggert&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-411&#34;&gt;&lt;time datetime=&#34;2012-12-29T00:56:34+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;00:56am&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Funny enough, it was this article by Nathan Smith with the same name as this article here that convinced me about using SASS in the first place: [http://sonspring.com/journal/sass-for-designers](http://sonspring.com/journal/sass-for-designers&#34; rel=&#34;nofollow)

(And I have a programming background :-)
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-412&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/ec8560921f8715605bfa731058c012a7?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/ec8560921f8715605bfa731058c012a7?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://thomaspark.me&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Thomas Park&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-412&#34;&gt;&lt;time datetime=&#34;2012-12-29T21:43:56+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;21:43pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        A useful complement to `@include` is `@extend`. While `@include` duplicates the mixin rules for each class, `@extend` has the classes share a single instance of the rules. This helps with the CSS bloat that John mentions.
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment odd alt thread-odd thread-alt depth-1&#34; id=&#34;li-comment-413&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/ec8560921f8715605bfa731058c012a7?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/ec8560921f8715605bfa731058c012a7?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://thomaspark.me&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Thomas Park&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-413&#34;&gt;&lt;time datetime=&#34;2012-12-30T17:44:53+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;17:44pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        A useful complement to `@include` is `@extend`. While `@include` duplicates the rules for each class, `@extend` causes them to share the rules they have in common. Helps with the CSS bloat.
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-415&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/f09e13b2647166e6d0c5bd4722b0ba71?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/f09e13b2647166e6d0c5bd4722b0ba71?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;dtgreen&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-415&#34;&gt;&lt;time datetime=&#34;2013-01-11T00:10:46+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;00:10am&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Brilliant read Laura. I’ve been trying to find the time to jump into SASS lately, and this article has pretty much made up my mind: I’m going to dive in this weekend! :)
    &lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>SMACSS –; Scalable and Modular Architecture for CSS</title>
      <link>https://laurakalbag.com/smacss-scalable-and-modular-architecture-for-css/</link>
      <pubDate>Wed, 31 Oct 2012 08:45:52 +0000</pubDate>
      
      <guid>https://laurakalbag.com/smacss-scalable-and-modular-architecture-for-css/</guid>
      <description>

&lt;p&gt;I bought &lt;a href=&#34;http://smacss.com/&#34;&gt;Jonathan Snook’s Scalable and Modular Architecture for CSS&lt;/a&gt; five months ago and, embarrassingly, I’ve only just read it. As a “flexible guide to developing sites small and large”, it’s fantastic.&lt;/p&gt;


&lt;figure class=&#34;aligncenter  wp-image-1252&#34;&gt;
	
		&lt;img src=&#34;https://laurakalbag.com/images/2012/10/IMG_5259.jpg&#34; alt=&#34;SMACSS book cover&#34;/&gt;
	
	
	&lt;figcaption&gt;
		
	&lt;/figcaption&gt;
	
&lt;/figure&gt;

Last month I was lucky enough to see Jonathan speak about &lt;a href=&#34;http://2012.fromthefront.it/&#34;&gt;State-Based Design&lt;/a&gt; (a concept which he covers in SMACSS) at the&lt;a href=&#34;http://2012.fromthefront.it/&#34;&gt; FromTheFront conference&lt;/a&gt; and it reminded me to put the book at the top of my to-read pile. It’s not a long book, it’s about the same easy-to-digest length as &lt;a href=&#34;http://www.abookapart.com/&#34;&gt;the A Book Apart series&lt;/a&gt;, which meant I got through it (whilst taking notes) in a couple of hours. I also love that there’s a &lt;a href=&#34;http://smacss.com/&#34;&gt;mailing list&lt;/a&gt; that keeps you updated with the latest methods and other relevant news.&lt;/p&gt;

&lt;h2 id=&#34;i-m-an-html-and-css-girl&#34;&gt;I’m an HTML and CSS girl&lt;/h2&gt;

&lt;p&gt;As a front-end developer, I’ve long been obsessed about writing really good clean and semantic HTML and CSS. Frameworks and boilerplates tend to make me cringe. Accessibility and &lt;a href=&#34;http://www.alistapart.com/articles/understandingprogressiveenhancement/&#34;&gt;progressive enhancement&lt;/a&gt; are what I value the most. It was lovely to read a book about CSS that was from a practical point of view but still held those ideals. The SMACSS core goals are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Increase the semantic value of a section of HTML and content&lt;/li&gt;
&lt;li&gt;Decrease the expectation of a specific HTML structure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Jonathan walks you through the way that he lays out his stylesheets, informs you the reasons behind his decisions and backs these up with solid examples. There’s no “you must do this” or “you’re not standards-based if you don’t do that.” Jonathan reiterates throughout that his way isn’t the only way, but it works for him.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is the exact opposite of what frameworks do&lt;/strong&gt;. &lt;a href=&#34;http://en.wikipedia.org/wiki/CSS_frameworks&#34;&gt;Frameworks&lt;/a&gt; tend to do the thinking for you, and encourage lazy blanket usage (perhaps not intentionally, but that’s what they tend to result in.) Jonathan teaches you the background that you need in order to make your own informed decisions.&lt;/p&gt;

&lt;p&gt;Throughout the book, Jonathan also refers to how this structuring of CSS affects older browsers, and how it works with &lt;a href=&#34;http://www.alistapart.com/articles/responsive-web-design/&#34;&gt;newer development techniques such as those using media queries&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;really-thinking-about-your-css&#34;&gt;Really thinking about your CSS&lt;/h2&gt;

&lt;p&gt;One thing that really stood out for me in SMACSS is the importance of process when structuring your CSS:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;With a module-based system, it is important to consider state-based design as applied to each of the modules. When you actively ask yourself “what us the default state,” then you’ll find yourself thinking proactively about progressive enhancement. It also can have you approaching issues slightly differently.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This systems-based way of thinking really appeals to me as I’ve been thinking a lot about design systems as part of &lt;a href=&#34;http://www.alistapart.com/articles/responsive-web-design/&#34;&gt;responsive design&lt;/a&gt;. It’s great to read about the usefulness of patterns in both development and design, making our planning a lot smarter and considering future use to create &lt;em&gt;maintainable&lt;/em&gt; stylesheets.&lt;/p&gt;

&lt;h2 id=&#34;starting-from-the-beginning&#34;&gt;Starting from the beginning&lt;/h2&gt;

&lt;p&gt;The structure of the book works really well and should help someone fairly new to CSS as well as more advanced masters of markup. It starts with the basics of structuring (ordering) your CSS, then moves on to more advanced details with selectors and performance. After the main SMACSS principles are covered, Jonathan goes on to explain the role of &lt;a href=&#34;http://www.vanseodesign.com/css/css-preprocessors/&#34;&gt;pre-processors&lt;/a&gt; and how they could work with the SMACSS principles. His explanation of &lt;a href=&#34;http://sass-lang.com/&#34;&gt;Sass&lt;/a&gt; actually helped me understand how to use it more efficiently (and I already use Sass on all my projects) and would do well as a primer for someone who is completely new to pre-processors.&lt;/p&gt;

&lt;h2 id=&#34;finding-the-balance&#34;&gt;Finding the balance&lt;/h2&gt;

&lt;p&gt;Whilst reading SMACSS I’ve managed to pinpoint the biggest problem in my CSS; I have a tendency to use overly qualified selectors (such as &lt;code&gt;body.home div#content h3.entry-title&lt;/code&gt;.) I’m not sure why I do it, though I suspect it’s because it looks more visually balanced than &lt;code&gt;.entry-title&lt;/code&gt;. And also I’m an idiot.&lt;/p&gt;

&lt;p&gt;Jonathan points out that structuring your selectors in this way is tying your CSS behaviour to your HTML structure (and hierarchy.) Of course, as someone obsessed with semantics and hell-bent on avoiding ‘classitis,’ I’ve tended to rely heavily on the structure of my HTML (and the unique nature of HTML5 elements) to hook my CSS but it does not make for modular or scalable CSS.&lt;/p&gt;

&lt;p&gt;I’ve learnt a great deal from SMACSS and I believe that writing good CSS is about finding that balance between writing clean, reusable HTML (written independently of CSS) and clean, reusable CSS (making use of HTML element classnames.) I feel like this book has made me understand a lot more about CSS and I really recommend it if you’re striving to be more efficient. I don’t often collaborate on markup, but I can imagine that SMACSS could help make team projects considerably easier.&lt;/p&gt;

&lt;h2 id=&#34;9-comments&#34;&gt;9 comments&lt;/h2&gt;

&lt;ol class=&#34;commentlist&#34;&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-341&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/3fe9db0e9123cc01797b65a8564f9e27?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/3fe9db0e9123cc01797b65a8564f9e27?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;Abbaty Kori&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-341&#34;&gt;&lt;time datetime=&#34;2012-10-31T09:40:26+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;09:40am&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        &lt;p&gt;Great! :D Sounds like what I’ve been looking for&amp;#8230;

I’m definitely getting a copy soon :)&lt;/p&gt;   &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment odd alt thread-odd thread-alt depth-1&#34; id=&#34;li-comment-342&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/579562979b2f9229f1c8c5d300c72676?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/579562979b2f9229f1c8c5d300c72676?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://dannybaggs.com&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Danny Baggs&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-342&#34;&gt;&lt;time datetime=&#34;2012-10-31T09:55:24+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;09:55am&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        &lt;p&gt;Thanks for the reminder&amp;#8230; just bought for my train ride.

Nice review.&lt;/p&gt;    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-343&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/18592fc8bad8f92136390f52303ee29c?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/18592fc8bad8f92136390f52303ee29c?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://mrgwebdev.com&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Mark Glover&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-343&#34;&gt;&lt;time datetime=&#34;2012-10-31T09:58:24+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;09:58am&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        &lt;p&gt;Hey Laura,

Thanks for posting this great review. There are a lot of CSS books out there and I’m not often tempted to buy one, but your writeup has pushed all my CSS buttons, so now I might have to&amp;#8230;

Cheers&lt;/p&gt;  &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment odd alt thread-odd thread-alt depth-1&#34; id=&#34;li-comment-344&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/8972424a01b25a343b664d5b8ff75a45?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/8972424a01b25a343b664d5b8ff75a45?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://pankajparashar.com/&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Pankaj Parashar&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-344&#34;&gt;&lt;time datetime=&#34;2012-10-31T09:58:51+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;09:58am&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        &lt;p&gt;Wow! Even i tend to use overly qualified selectors most of the time, but never realized that I am actually making my css dependent on the HTML structure.

Thanks for this article!&lt;/p&gt;    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-345&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/8f858a4d2a149894dd30c4d1a72833ac?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/8f858a4d2a149894dd30c4d1a72833ac?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://michaelwoodruff.com&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Michael Woodruff&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-345&#34;&gt;&lt;time datetime=&#34;2012-10-31T12:56:58+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;12:56pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        “I have a tendency to use overly qualified selectors (such as body.home div#content h3.entry-title.) I’m not sure why I do it, though I suspect it’s because it looks more visually balanced than .entry-title.”

My exact feeling as well.
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment odd alt thread-odd thread-alt depth-1&#34; id=&#34;li-comment-346&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/174df6d4445633cb5698e2c046ff7961?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/174df6d4445633cb5698e2c046ff7961?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://www.rachil.li&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Rachel&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-346&#34;&gt;&lt;time datetime=&#34;2012-10-31T13:15:57+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;13:15pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Like you, I’ve had SMACSS for quite a while now but have never got around to reading it. Reading this really just tells me that I need to *make* the time and get reading it. I’m sure it’ll help my process with CSS massively. Thanks :)
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-347&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/6db663240610773f134b9711193a607c?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/6db663240610773f134b9711193a607c?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;hannes&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-347&#34;&gt;&lt;time datetime=&#34;2012-11-01T09:42:27+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;09:42am&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        &lt;p&gt;‘And also I’m an idiot.’ :D

no, you’re not! great shoptalkshop btw. keep it up!&lt;/p&gt; &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment odd alt thread-odd thread-alt depth-1&#34; id=&#34;li-comment-348&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/a875214ef52a0868ff836df077af2ebe?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/a875214ef52a0868ff836df077af2ebe?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://tempertemper.net&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Martin Underhill&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-348&#34;&gt;&lt;time datetime=&#34;2012-11-01T22:31:08+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;22:31pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Great article! I’ve just gone to Mr. Snook’s site and bought the ebook– now to get stuck in! Thanks :)
    &lt;/div&gt;
&lt;/li&gt;
    &lt;li class=&#34;comment even thread-even depth-1&#34; id=&#34;li-comment-349&#34;&gt;
            &lt;div class=&#34;comment-author vcard&#34;&gt;
            &lt;img alt=&#39;&#39; src=&#39;https://secure.gravatar.com/avatar/7bc4c5263bd87380a775d22aa165b9f1?s=72&amp;amp;d=mm&amp;amp;r=g&#39; srcset=&#39;https://secure.gravatar.com/avatar/7bc4c5263bd87380a775d22aa165b9f1?s=144&amp;amp;d=mm&amp;amp;r=g 2x&#39; class=&#39;avatar avatar-72 photo&#39; height=&#39;72&#39; width=&#39;72&#39; /&gt;&lt;cite class=&#34;fn&#34;&gt;&lt;a href=&#39;http://cupofvoodoo.com&#39; rel=&#39;external nofollow&#39; class=&#39;url&#39;&gt;Dan Robert&lt;/a&gt;&lt;/cite&gt;
                &lt;aside class=&#34;comment-meta commentmetadata&#34;&gt;&lt;p&gt;&lt;a href=&#34;#comment-349&#34;&gt;&lt;time datetime=&#34;2012-11-02T23:16:22+00:00&#34; pubdate class=&#34;published&#34;&gt;
         at &lt;span class=&#34;hours&#34;&gt;23:16pm&lt;/span&gt;&lt;/time&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/aside&gt;
    &lt;/div&gt;
    &lt;div class=&#34;comment-entry&#34;&gt;
        Great review! I’ve also purchased the book quite a while back and still haven’t read it. This post prompted me to put it next on my list! :)
    &lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
